/*
********************************************************************************
*  Copyright (C), 2009-2013, 合众思壮西安研发中心
*
*  项目名称：xxxx
*  
*  文件名称: xxxx.c
*
*  文件描述：xxxx
*             
*             
*  创 建 者: 皇海明
*
*  创建日期：2013-03-18 
*
*  版 本 号：V1.0
*
*  修改记录： 
*             
*      1. 日    期： 
*         修 改 人： 
*         所作修改： 
*      2. ...
********************************************************************************
*/
#include "Can.h"
#include "main.h"
#include "Public.h"
#include "string.h"
#include "shell.h"

PACKET sendpacket;
extern void senddatapacket(COMX * pcom,u8* data,u32 length);
/*
********************************************************************************
*  函数名称: CanToUtcp
*
*  功能描述: 将CAN总线数据直接打包成UTCP二进制数据传输协议发送。
*            
*
*  输入参数: 无
*
*  输出参数: 无
*
*  返 回 值: 无
*
********************************************************************************
*/
void CanToUtcp(u8 channel, CANX * pcan, COMX * pcom)
{
    u8 i, buf[20];
	  u16 CurrentPacketLen = 0;
	  u16 CurrentPacketID = 0;
	  u32 PacketTotalLength = 0;
    CANQUEDATA data;

    if(channel != 1 && channel != 2)
    {
        return;
    }
    
    else if(pcan == NULL || pcom == NULL)
    {
        return;
    }
    while(CanReceive(pcan, &data))
    {
        buf[0] = channel;
        buf[1] = (u8)(data.Id >> 24);
        buf[2] = (u8)(data.Id >> 16);
        buf[3] = (u8)(data.Id >> 8);
        buf[4] = (u8)(data.Id >> 0);
        buf[5] = data.Dlc;
				for (i = 0; i < data.Dlc; i++)
        {
            buf[6 + i] = data.Data[i];
        }
				if (data.Dlc < 8)
				{
						memset(buf + 6 + data.Dlc, 0, 8 - data.Dlc);
				}
				//向串口发送CAN数据
				
				//RTU_DEBUG("CAN%d recieve data: 0x%02X 0x%02X 0x%02X 0x%02X 0x%02X 0x%02X 0x%02X 0x%02X\r\n",
				//channel, buf[6],buf[7],buf[8],buf[9],buf[10],buf[11],buf[12],buf[13]);

				//构建数据包
				sendpacket.candata[0] = 0x41;
				CurrentPacketLen = data.Dlc+6;
				PacketTotalLength = CurrentPacketLen;
				CurrentPacketID = 0;
				c16toa(&CurrentPacketLen,&sendpacket.candata[1]);
				c32toa(&PacketTotalLength,&sendpacket.candata[3]);
				c16toa(&CurrentPacketID,&sendpacket.candata[7]);
				memcpy(&sendpacket.candata[FIXED_LENGTH],buf,14);
				senddatapacket(&COM3,sendpacket.candata,FIXED_LENGTH+14+CHECKSUM);   

    }
}

/*
********************************************************************************
*  函数名称: UartDataToCanData
*
*  功能描述: 将收到的uart数据进行打包
*            
*
*  输入参数: 无
*
*  输出参数: 无
*
*  返 回 值: 无
*
********************************************************************************
*/

void UartDataToCanData(u8 len, u8 *Data)
{
	CANQUEDATA data;
	u8 i;
	
	if(Data==NULL&&len==0)
	{
		return;
	}
	memset(&data, 0, sizeof(CANQUEDATA));

	data.Id = ((Data[1] << 24) | (Data[2] << 16) | (Data[3] << 8) | Data[4]);
	data.Dlc = Data[5];
	 
	for(i = 0; i < Data[5]; i++)
  {
		data.Data[i] = Data[i+6];
  }
	 
	CanTransmit(&Can1, &data);
}







